{"version":3,"file":"static/webpack/static/development/pages/logs.js.02f8333b4bc5e6e456d8.hot-update.js","sources":["webpack:///./pages/logs.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport TableView from '../src/table-view';\n\nimport logs from '../services/logs';\n\nconst columnMaps = {\n  player: 'Player Name',\n  date: 'Date',\n  item: 'Item',\n  itemID: 'Item ID',\n  itemString: 'Item String',\n  votes: 'Votes',\n  response: 'Response',\n  class: 'Class',\n  instance: 'Instance',\n  boss: 'Boss Name',\n  gear1: 'Prev Gear (slot 1)',\n  gear2: 'Prev Gear (slot 2)',\n  subType: 'Item Type',\n  equipLoc: 'Slot Type',\n  note: 'Reward Reasoning',\n  logid: 'Unique Log ID'\n};\n\nexport default function LogsTable() {\n  const [logsList, setLogsList] = useState();\n  const [orderBy, setOrderBy] = useState('date');\n  const [order, setOrder] = useState('DESC');\n\n  async function loadLogs() {\n    const result = await logs.getUnformatted(orderBy, order);\n    // const result = await logs.getAll();\n    console.log('logsList', result)\n    setLogsList(result);\n  }\n\n  function onRequestSort(event, property) {\n    if (orderBy === property) {\n      setOrder(order === 'ASC' ? 'DESC' : 'ASC');\n    } else {\n      setOrderBy(property);\n      setOrder('DESC');\n    }\n\n    setLogsList(null);\n    loadLogs();\n  }\n\n  function handleClickRow(event, row) {\n    console.log(event, row);\n  }\n\n  useEffect(() => {\n    if (!logsList) {\n      loadLogs();\n    }\n  }, []);\n\n  return (\n    <Box my={4}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Loot Logs\n      </Typography>\n\n      <br />\n\n      {logsList ? (\n        <>\n          <TableView\n            onRowClick={handleClickRow}\n            onRequestSort={onRequestSort}\n            columns={logsList.columns}\n            values={logsList.values}\n            columnMaps={columnMaps}\n            orderBy={orderBy}\n            order={order}\n          />\n        </>\n      ) : (\n        <>\n          Loading logs...\n        </>\n      )}\n    </Box>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;A","sourceRoot":""}